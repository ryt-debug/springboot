<?xml version="1.0" encoding="UTF-8"?>
<!-- 日志级别从低到高分为TRACE < DEBUG < INFO < WARN < ERROR < FATAL，如果设置为WARN，则低于WARN的信息都不会输出 -->
<!-- scan:当此属性设置为true时，配置文件如果发生改变，将会被重新加载，默认值为true -->
<!-- scanPeriod:设置监测配置文件是否有修改的时间间隔，如果没有给出时间单位，默认单位是毫秒。当scan为true时，此属性生效。默认的时间间隔为1分钟。 -->
<!-- debug:当此属性设置为true时，将打印出logback内部日志信息，实时查看logback运行状态。默认值为false。 -->
<configuration>
    <contextName>logback</contextName>
    <!--读取配置中心的属性-->
    <!-- <springProperty scope="context" name="log path" source="logging.path"/>-->
    <!-- name的值是变量的名称，value的值时变量定义的值。通过定义的值会被插入到logger上下文中。定义变量后，可以使“${}”来使用变量。 -->
    <property name="LOG_PATH" value="log\\" />
    <!--输出到控制台-->
    <!--
        PatternLayout recognizes "%black", "%red","%green","%yellow","%blue",
        "%magenta","%cyan", "%white", "%gray","%boldRed","%boldGreen", "%boldYellow",
        "%boldBlue","%boldMagenta""%boldCyan", "%boldWhite" and "%highlight"
        as conversion words
    -->
    <!-- %m输出的信息,%p日志级别,%t线程名,%d日期,%c类的全名,%-5level:级别从左显示5个字符宽度,%msg:日志消息,%i索引【从数字0开始递增】 -->
    <appender name="CONSOLE" class="ch.qos.logback.core.ConsoleAppender">
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <level>DEBUG</level>
        </filter>
        <encoder>
            <!--%logger{50}:表示logger名字最长50个字符，否则按照句点分割-->
            <Pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} %boldGreen(%-5level) %boldMagenta([%t]) %cyan(%logger{50}) -- %yellow(%msg%n)</Pattern>
            <!-- 设置字符集 -->
            <charset>UTF-8</charset>
        </encoder>
    </appender>


<!--    &lt;!&ndash;输出到文件&ndash;&gt;-->
<!--    &lt;!&ndash; 时间滚动输出 level为全部日志 &ndash;&gt;-->
<!--    <appender name="RUNTIME" class="ch.qos.logback.core.rolling.RollingFileAppender">-->
<!--        &lt;!&ndash; 正在记录的日志文件的路径及文件名，注释掉这个按照每天生成一个日志文件 &ndash;&gt;-->
<!--        &lt;!&ndash;<file>${LOG_PATH}/public.log</file>&ndash;&gt;-->
<!--        &lt;!&ndash;日志文件输出格式&ndash;&gt;-->
<!--        <encoder>-->
<!--            <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%t] %-5level %logger{50} &#45;&#45; %msg%n</pattern>-->
<!--            <charset>UTF-8</charset> &lt;!&ndash; 设置字符集 &ndash;&gt;-->
<!--        </encoder>-->
<!--        &lt;!&ndash; 日志记录器的滚动策略，按日期，按大小记录 &ndash;&gt;-->
<!--        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">-->
<!--            &lt;!&ndash; 日志归档 后面可以加.zip&ndash;&gt;-->
<!--            <fileNamePattern>${LOG_PATH}public-%d{yyyy-MM-dd}.%i.log</fileNamePattern>-->
<!--            &lt;!&ndash;日志文件保留天数&ndash;&gt;-->
<!--            <maxHistory>10</maxHistory>-->
<!--            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">-->
<!--                &lt;!&ndash;文件达到 最大时会被压缩和切割 &ndash;&gt;-->
<!--                <maxFileSize>5MB</maxFileSize>-->
<!--            </timeBasedFileNamingAndTriggeringPolicy>-->
<!--            &lt;!&ndash;日志总保存量为10MB&ndash;&gt;-->
<!--            <totalSizeCap>10MB</totalSizeCap>-->
<!--        </rollingPolicy>-->
<!--    </appender>-->

<!--    &lt;!&ndash;时间滚动输出 level为 ERROR 日志 &ndash;&gt;-->
<!--    <appender name="ERROR" class="ch.qos.logback.core.rolling.RollingFileAppender">-->
<!--        <encoder>-->
<!--            <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%t] %-5level %logger{50} &#45;&#45; %msg%n</pattern>-->
<!--            <charset>UTF-8</charset> &lt;!&ndash; 此处设置字符集 &ndash;&gt;-->
<!--        </encoder>-->
<!--        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">-->
<!--            <fileNamePattern>${LOG_PATH}error-%d{yyyy-MM-dd}.%i.log</fileNamePattern>-->
<!--            <maxHistory>10</maxHistory>-->
<!--            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">-->
<!--                &lt;!&ndash;文件达到 最大时会被压缩和切割 &ndash;&gt;-->
<!--                <maxFileSize>5MB</maxFileSize>-->
<!--            </timeBasedFileNamingAndTriggeringPolicy>-->
<!--            &lt;!&ndash;日志总保存量为10MB&ndash;&gt;-->
<!--            <totalSizeCap>10MB</totalSizeCap>-->
<!--        </rollingPolicy>-->
<!--        &lt;!&ndash; 此日志文件只记录ERROR级别的 &ndash;&gt;-->
<!--        <filter class="ch.qos.logback.classic.filter.LevelFilter">-->
<!--            <level>ERROR</level>-->
<!--            <onMatch>ACCEPT</onMatch>-->
<!--            <onMismatch>DENY</onMismatch>-->
<!--        </filter>-->
<!--    </appender>-->

    <!--开发环境:打印控制台-->
    <springProfile name="dev">
        <!--<logger name="com.phfund" level="debug"/>-->
        <root level="INFO">
            <appender-ref ref="CONSOLE" />
        </root>
        <logger name="com.springboot.mapper" level="DEBUG"/>
    </springProfile>

    <!--生产环境:输出到文件-->
<!--    <springProfile name="prd">-->
<!--        <root level="INFO">-->
<!--            <appender-ref ref="RUNTIME" />-->
<!--            <appender-ref ref="ERROR" />-->
<!--        </root>-->
<!--    </springProfile>-->

</configuration>